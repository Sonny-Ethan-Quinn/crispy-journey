name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  lint-and-format:
    runs-on: ubuntu-latest
    name: Code Quality Checks
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install black flake8 isort mypy
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        
    - name: Format with Black
      run: black --check --diff .
      
    - name: Lint with flake8
      run: flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
      
    - name: Sort imports with isort
      run: isort --check-only --diff .
      
    - name: Type check with mypy
      run: mypy .
      continue-on-error: true

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.9', '3.10', '3.11']
        
    name: Test Python ${{ matrix.python-version }}
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-cov
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi
        
    - name: Run tests
      run: |
        if [ -d tests ]; then
          pytest tests/ --cov=src --cov-report=xml
        else
          echo "No tests directory found, skipping tests"
        fi
        
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      if: matrix.python-version == '3.11'
      with:
        file: ./coverage.xml

  security:
    runs-on: ubuntu-latest
    name: Security Scan
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install security tools
      run: |
        python -m pip install --upgrade pip
        pip install bandit safety
        
    - name: Run bandit security scan
      run: |
        if [ -d src ]; then
          bandit -r src/
        else
          echo "No src directory found, skipping bandit scan"
        fi
        
    - name: Check dependencies for security vulnerabilities
      run: |
        if [ -f requirements.txt ]; then
          safety check -r requirements.txt
        else
          echo "No requirements.txt found, skipping safety check"
        fi

  build:
    runs-on: ubuntu-latest
    needs: [lint-and-format, test, security]
    name: Build and Package
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build wheel
        
    - name: Build package
      run: |
        if [ -f setup.py ] || [ -f pyproject.toml ]; then
          python -m build
        else
          echo "No setup.py or pyproject.toml found, skipping build"
        fi
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      if: success()
      with:
        name: dist-packages
        path: dist/